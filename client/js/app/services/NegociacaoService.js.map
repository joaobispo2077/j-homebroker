{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService.js\";\r\nimport { Negociacao } from \"../models/Negociacao.js\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory.js\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao.js\";\r\nexport class NegociacaoService {\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return this._http.get('negociacoes/semana').then(negociacoes => {\r\n            return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        }).catch((erro) => {\r\n            console.log(erro);\r\n\r\n            throw new Error('Não Foi possível obter as negociações da semana');\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http.get('negociacoes/anterior').then(negociacoes => {\r\n            return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        }).catch((erro) => {\r\n            console.log(erro);\r\n\r\n            throw new Error('Não Foi possível obter as negociações da semana anterior');\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http.get('negociacoes/retrasada').then(negociacoes => {\r\n            return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        }).catch((erro) => {\r\n            console.log(erro);\r\n\r\n            throw new Error('Não Foi possível obter as negociações da semana retrasada');\r\n        });\r\n\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações Apagas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual\r\n                    .some(negociacaoExistente => JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))\r\n                )\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n\r\n            });\r\n    }\r\n\r\n\r\n}"]}